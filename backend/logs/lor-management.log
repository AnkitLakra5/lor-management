2025-06-25 21:34:50 [restartedMain] INFO  com.lor.LorManagementApplication - Starting LorManagementApplication using Java 24.0.1 with PID 21424 (D:\LOR\backend\target\classes started by ASUS in D:\LOR\backend)
2025-06-25 21:34:50 [restartedMain] DEBUG com.lor.LorManagementApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-06-25 21:34:50 [restartedMain] INFO  com.lor.LorManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-25 21:34:50 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-25 21:34:50 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-25 21:34:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-25 21:34:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 5 JPA repository interfaces.
2025-06-25 21:34:52 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-25 21:34:52 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-25 21:34:52 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-06-25 21:34:52 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-25 21:34:52 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1600 ms
2025-06-25 21:34:52 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-25 21:34:52 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-06-25 21:34:52 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-25 21:34:52 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-25 21:34:52 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-25 21:34:53 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@16e83113
2025-06-25 21:34:53 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-25 21:34:53 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 21:34:53 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-25 21:34:53 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-25 21:34:53 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-25 21:34:54 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-25 21:34:54 [restartedMain] DEBUG c.l.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-06-25 21:34:55 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-25 21:34:55 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3fb678b5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2655376f, org.springframework.security.web.context.SecurityContextHolderFilter@555e13a1, org.springframework.security.web.header.HeaderWriterFilter@2e04de60, org.springframework.web.filter.CorsFilter@59623ba7, org.springframework.security.web.authentication.logout.LogoutFilter@3a63879, com.lor.security.JwtAuthenticationFilter@583e8cda, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@473262e9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7746749, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3255d028, org.springframework.security.web.session.SessionManagementFilter@343e2c17, org.springframework.security.web.access.ExceptionTranslationFilter@1e0e78b8, org.springframework.security.web.access.intercept.AuthorizationFilter@4bea520e]
2025-06-25 21:34:55 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-25 21:34:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-06-25 21:34:55 [restartedMain] INFO  com.lor.LorManagementApplication - Started LorManagementApplication in 5.459 seconds (process running for 5.95)
2025-06-25 21:34:55 [restartedMain] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:34:55 [restartedMain] INFO  com.lor.config.DataInitializer - Default admin user already exists
2025-06-25 21:34:55 [restartedMain] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.examination_number=?
2025-06-25 21:34:55 [restartedMain] INFO  com.lor.config.DataInitializer - Demo student user already exists
2025-06-25 21:34:55 [restartedMain] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-06-25 21:34:55 [restartedMain] INFO  com.lor.config.DataInitializer - Demo professor user already exists
2025-06-25 21:34:55 [restartedMain] INFO  com.lor.config.DataInitializer - Checking and fixing existing professors' active status...
2025-06-25 21:34:55 [restartedMain] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.role=?
2025-06-25 21:34:55 [restartedMain] INFO  com.lor.config.DataInitializer - Found 2 professors in database
2025-06-25 21:34:55 [restartedMain] INFO  com.lor.config.DataInitializer - Professor A (ID: 3) already has isActive = true
2025-06-25 21:34:55 [restartedMain] INFO  com.lor.config.DataInitializer - Professor B (ID: 5) already has isActive = true
2025-06-25 21:34:55 [restartedMain] INFO  com.lor.config.DataInitializer - All professors already have proper active status
2025-06-25 21:35:46 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-25 21:35:46 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-25 21:35:46 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-06-25 21:35:46 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-06-25 21:35:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-06-25 21:35:46 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-25 21:35:46 [http-nio-8080-exec-4] WARN  o.s.w.s.h.HandlerMappingIntrospector - Cache miss for REQUEST dispatch to '/api/auth/login' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-06-25 21:35:46 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-06-25 21:35:46 [http-nio-8080-exec-4] INFO  com.lor.controller.AuthController - Login attempt for user: 22VBCA051718
2025-06-25 21:35:46 [http-nio-8080-exec-4] INFO  com.lor.service.AuthService - Attempting to authenticate user: 22VBCA051718
2025-06-25 21:35:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:35:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.examination_number=?
2025-06-25 21:35:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:35:46 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-06-25 21:35:46 [http-nio-8080-exec-4] INFO  com.lor.service.AuthService - User authenticated successfully: ankitlakra020@gmail.com with role: Student
2025-06-25 21:35:46 [http-nio-8080-exec-4] INFO  com.lor.controller.AuthController - Login successful for user: ankitlakra020@gmail.com with role: Student
2025-06-25 21:35:46 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /lor-requests/student
2025-06-25 21:35:46 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /lor-requests/professors
2025-06-25 21:35:46 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /lor-requests/student
2025-06-25 21:35:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/student
2025-06-25 21:35:46 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /lor-requests/professors
2025-06-25 21:35:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/professors
2025-06-25 21:35:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:35:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:35:46 [http-nio-8080-exec-8] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: ankitlakra020@gmail.com
2025-06-25 21:35:46 [http-nio-8080-exec-7] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: ankitlakra020@gmail.com
2025-06-25 21:35:46 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/student
2025-06-25 21:35:46 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/professors
2025-06-25 21:35:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getActiveProfessors(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:46 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getStudentRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:46 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getStudentRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:46 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getActiveProfessors(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:46 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.role='PROFESSOR' 
    order by
        u1_0.name
2025-06-25 21:35:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:35:46 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/professors
2025-06-25 21:35:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:35:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        lr1_0.id,
        lr1_0.class_roll_number,
        lr1_0.course,
        lr1_0.created_at,
        lr1_0.examination_number,
        lr1_0.institute_company,
        lr1_0.processed_at,
        lr1_0.professor_id,
        lr1_0.professor_comments,
        lr1_0.registration_number,
        lr1_0.requested_at,
        lr1_0.semester,
        lr1_0.session,
        lr1_0.status,
        lr1_0.student_id,
        lr1_0.student_name,
        lr1_0.updated_at 
    from
        lor_requests lr1_0 
    where
        lr1_0.student_id=? 
    order by
        lr1_0.requested_at desc
2025-06-25 21:35:46 [http-nio-8080-exec-9] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: ankitlakra020@gmail.com
2025-06-25 21:35:46 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/professors
2025-06-25 21:35:46 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getActiveProfessors(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:46 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getActiveProfessors(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.role='PROFESSOR' 
    order by
        u1_0.name
2025-06-25 21:35:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/student
2025-06-25 21:35:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:35:46 [http-nio-8080-exec-10] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: ankitlakra020@gmail.com
2025-06-25 21:35:46 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/student
2025-06-25 21:35:46 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getStudentRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:46 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getStudentRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:35:46 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        lr1_0.id,
        lr1_0.class_roll_number,
        lr1_0.course,
        lr1_0.created_at,
        lr1_0.examination_number,
        lr1_0.institute_company,
        lr1_0.processed_at,
        lr1_0.professor_id,
        lr1_0.professor_comments,
        lr1_0.registration_number,
        lr1_0.requested_at,
        lr1_0.semester,
        lr1_0.session,
        lr1_0.status,
        lr1_0.student_id,
        lr1_0.student_name,
        lr1_0.updated_at 
    from
        lor_requests lr1_0 
    where
        lr1_0.student_id=? 
    order by
        lr1_0.requested_at desc
2025-06-25 21:35:53 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /lor-requests/student
2025-06-25 21:35:53 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /lor-requests/professors
2025-06-25 21:35:53 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /lor-requests/professors
2025-06-25 21:35:53 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /lor-requests/student
2025-06-25 21:35:53 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/student
2025-06-25 21:35:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/professors
2025-06-25 21:35:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:35:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:35:53 [http-nio-8080-exec-6] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: ankitlakra020@gmail.com
2025-06-25 21:35:53 [http-nio-8080-exec-5] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: ankitlakra020@gmail.com
2025-06-25 21:35:53 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/student
2025-06-25 21:35:53 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/professors
2025-06-25 21:35:53 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getActiveProfessors(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:53 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getStudentRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:53 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getStudentRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:53 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getActiveProfessors(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:35:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.role='PROFESSOR' 
    order by
        u1_0.name
2025-06-25 21:35:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        lr1_0.id,
        lr1_0.class_roll_number,
        lr1_0.course,
        lr1_0.created_at,
        lr1_0.examination_number,
        lr1_0.institute_company,
        lr1_0.processed_at,
        lr1_0.professor_id,
        lr1_0.professor_comments,
        lr1_0.registration_number,
        lr1_0.requested_at,
        lr1_0.semester,
        lr1_0.session,
        lr1_0.status,
        lr1_0.student_id,
        lr1_0.student_name,
        lr1_0.updated_at 
    from
        lor_requests lr1_0 
    where
        lr1_0.student_id=? 
    order by
        lr1_0.requested_at desc
2025-06-25 21:35:53 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/professors
2025-06-25 21:35:53 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/student
2025-06-25 21:35:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:35:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:35:53 [http-nio-8080-exec-8] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: ankitlakra020@gmail.com
2025-06-25 21:35:53 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/professors
2025-06-25 21:35:53 [http-nio-8080-exec-9] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: ankitlakra020@gmail.com
2025-06-25 21:35:53 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getActiveProfessors(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:53 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getActiveProfessors(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:53 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/student
2025-06-25 21:35:53 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getStudentRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:53 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.role='PROFESSOR' 
    order by
        u1_0.name
2025-06-25 21:35:53 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getStudentRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:35:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:35:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        lr1_0.id,
        lr1_0.class_roll_number,
        lr1_0.course,
        lr1_0.created_at,
        lr1_0.examination_number,
        lr1_0.institute_company,
        lr1_0.processed_at,
        lr1_0.professor_id,
        lr1_0.professor_comments,
        lr1_0.registration_number,
        lr1_0.requested_at,
        lr1_0.semester,
        lr1_0.session,
        lr1_0.status,
        lr1_0.student_id,
        lr1_0.student_name,
        lr1_0.updated_at 
    from
        lor_requests lr1_0 
    where
        lr1_0.student_id=? 
    order by
        lr1_0.requested_at desc
2025-06-25 21:36:21 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-06-25 21:36:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-06-25 21:36:21 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-25 21:36:21 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-06-25 21:36:21 [http-nio-8080-exec-10] INFO  com.lor.controller.AuthController - Login attempt for user: PROF001
2025-06-25 21:36:21 [http-nio-8080-exec-10] INFO  com.lor.service.AuthService - Attempting to authenticate user: PROF001
2025-06-25 21:36:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.examination_number=?
2025-06-25 21:36:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-06-25 21:36:21 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:21 [http-nio-8080-exec-10] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-06-25 21:36:21 [http-nio-8080-exec-10] INFO  com.lor.service.AuthService - User authenticated successfully: prof.a@university.edu with role: Professor
2025-06-25 21:36:21 [http-nio-8080-exec-10] INFO  com.lor.controller.AuthController - Login successful for user: prof.a@university.edu with role: Professor
2025-06-25 21:36:21 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /lor-requests/professor
2025-06-25 21:36:21 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /lor-requests/professor
2025-06-25 21:36:21 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /lor-requests/professor/pending
2025-06-25 21:36:21 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /lor-requests/professor/pending
2025-06-25 21:36:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/professor/pending
2025-06-25 21:36:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/professor
2025-06-25 21:36:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:21 [http-nio-8080-exec-5] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: prof.a@university.edu
2025-06-25 21:36:21 [http-nio-8080-exec-6] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: prof.a@university.edu
2025-06-25 21:36:21 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/professor/pending
2025-06-25 21:36:21 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/professor
2025-06-25 21:36:21 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getPendingRequestsForProfessor(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:21 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getProfessorRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:21 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getPendingRequestsForProfessor(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:21 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getProfessorRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        lr1_0.id,
        lr1_0.class_roll_number,
        lr1_0.course,
        lr1_0.created_at,
        lr1_0.examination_number,
        lr1_0.institute_company,
        lr1_0.processed_at,
        lr1_0.professor_id,
        lr1_0.professor_comments,
        lr1_0.registration_number,
        lr1_0.requested_at,
        lr1_0.semester,
        lr1_0.session,
        lr1_0.status,
        lr1_0.student_id,
        lr1_0.student_name,
        lr1_0.updated_at 
    from
        lor_requests lr1_0 
    where
        lr1_0.professor_id=? 
    order by
        lr1_0.requested_at desc
2025-06-25 21:36:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        lr1_0.id,
        lr1_0.class_roll_number,
        lr1_0.course,
        lr1_0.created_at,
        lr1_0.examination_number,
        lr1_0.institute_company,
        lr1_0.processed_at,
        lr1_0.professor_id,
        lr1_0.professor_comments,
        lr1_0.registration_number,
        lr1_0.requested_at,
        lr1_0.semester,
        lr1_0.session,
        lr1_0.status,
        lr1_0.student_id,
        lr1_0.student_name,
        lr1_0.updated_at 
    from
        lor_requests lr1_0 
    where
        lr1_0.professor_id=? 
        and lr1_0.status='PENDING' 
    order by
        lr1_0.requested_at
2025-06-25 21:36:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/professor/pending
2025-06-25 21:36:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/professor
2025-06-25 21:36:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:21 [http-nio-8080-exec-9] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: prof.a@university.edu
2025-06-25 21:36:21 [http-nio-8080-exec-8] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: prof.a@university.edu
2025-06-25 21:36:21 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/professor/pending
2025-06-25 21:36:21 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/professor
2025-06-25 21:36:21 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getPendingRequestsForProfessor(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:21 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getProfessorRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:21 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getPendingRequestsForProfessor(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:21 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getProfessorRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        lr1_0.id,
        lr1_0.class_roll_number,
        lr1_0.course,
        lr1_0.created_at,
        lr1_0.examination_number,
        lr1_0.institute_company,
        lr1_0.processed_at,
        lr1_0.professor_id,
        lr1_0.professor_comments,
        lr1_0.registration_number,
        lr1_0.requested_at,
        lr1_0.semester,
        lr1_0.session,
        lr1_0.status,
        lr1_0.student_id,
        lr1_0.student_name,
        lr1_0.updated_at 
    from
        lor_requests lr1_0 
    where
        lr1_0.professor_id=? 
    order by
        lr1_0.requested_at desc
2025-06-25 21:36:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        lr1_0.id,
        lr1_0.class_roll_number,
        lr1_0.course,
        lr1_0.created_at,
        lr1_0.examination_number,
        lr1_0.institute_company,
        lr1_0.processed_at,
        lr1_0.professor_id,
        lr1_0.professor_comments,
        lr1_0.registration_number,
        lr1_0.requested_at,
        lr1_0.semester,
        lr1_0.session,
        lr1_0.status,
        lr1_0.student_id,
        lr1_0.student_name,
        lr1_0.updated_at 
    from
        lor_requests lr1_0 
    where
        lr1_0.professor_id=? 
        and lr1_0.status='PENDING' 
    order by
        lr1_0.requested_at
2025-06-25 21:36:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/professor
2025-06-25 21:36:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/professor/pending
2025-06-25 21:36:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:23 [http-nio-8080-exec-10] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: prof.a@university.edu
2025-06-25 21:36:23 [http-nio-8080-exec-7] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: prof.a@university.edu
2025-06-25 21:36:23 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/professor/pending
2025-06-25 21:36:23 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/professor
2025-06-25 21:36:23 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getPendingRequestsForProfessor(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:23 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getProfessorRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:23 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getProfessorRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:23 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getPendingRequestsForProfessor(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        lr1_0.id,
        lr1_0.class_roll_number,
        lr1_0.course,
        lr1_0.created_at,
        lr1_0.examination_number,
        lr1_0.institute_company,
        lr1_0.processed_at,
        lr1_0.professor_id,
        lr1_0.professor_comments,
        lr1_0.registration_number,
        lr1_0.requested_at,
        lr1_0.semester,
        lr1_0.session,
        lr1_0.status,
        lr1_0.student_id,
        lr1_0.student_name,
        lr1_0.updated_at 
    from
        lor_requests lr1_0 
    where
        lr1_0.professor_id=? 
    order by
        lr1_0.requested_at desc
2025-06-25 21:36:23 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        lr1_0.id,
        lr1_0.class_roll_number,
        lr1_0.course,
        lr1_0.created_at,
        lr1_0.examination_number,
        lr1_0.institute_company,
        lr1_0.processed_at,
        lr1_0.professor_id,
        lr1_0.professor_comments,
        lr1_0.registration_number,
        lr1_0.requested_at,
        lr1_0.semester,
        lr1_0.session,
        lr1_0.status,
        lr1_0.student_id,
        lr1_0.student_name,
        lr1_0.updated_at 
    from
        lor_requests lr1_0 
    where
        lr1_0.professor_id=? 
        and lr1_0.status='PENDING' 
    order by
        lr1_0.requested_at
2025-06-25 21:36:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/professor
2025-06-25 21:36:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /lor-requests/professor/pending
2025-06-25 21:36:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:23 [http-nio-8080-exec-3] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: prof.a@university.edu
2025-06-25 21:36:23 [http-nio-8080-exec-4] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: prof.a@university.edu
2025-06-25 21:36:23 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/professor/pending
2025-06-25 21:36:23 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /lor-requests/professor
2025-06-25 21:36:23 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getPendingRequestsForProfessor(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:23 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getProfessorRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:23 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getProfessorRequests(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:23 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.LorRequestController.getPendingRequestsForProfessor(); target is of class [com.lor.controller.LorRequestController]
2025-06-25 21:36:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        lr1_0.id,
        lr1_0.class_roll_number,
        lr1_0.course,
        lr1_0.created_at,
        lr1_0.examination_number,
        lr1_0.institute_company,
        lr1_0.processed_at,
        lr1_0.professor_id,
        lr1_0.professor_comments,
        lr1_0.registration_number,
        lr1_0.requested_at,
        lr1_0.semester,
        lr1_0.session,
        lr1_0.status,
        lr1_0.student_id,
        lr1_0.student_name,
        lr1_0.updated_at 
    from
        lor_requests lr1_0 
    where
        lr1_0.professor_id=? 
    order by
        lr1_0.requested_at desc
2025-06-25 21:36:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        lr1_0.id,
        lr1_0.class_roll_number,
        lr1_0.course,
        lr1_0.created_at,
        lr1_0.examination_number,
        lr1_0.institute_company,
        lr1_0.processed_at,
        lr1_0.professor_id,
        lr1_0.professor_comments,
        lr1_0.registration_number,
        lr1_0.requested_at,
        lr1_0.semester,
        lr1_0.session,
        lr1_0.status,
        lr1_0.student_id,
        lr1_0.student_name,
        lr1_0.updated_at 
    from
        lor_requests lr1_0 
    where
        lr1_0.professor_id=? 
        and lr1_0.status='PENDING' 
    order by
        lr1_0.requested_at
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /auth/login
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /auth/login
2025-06-25 21:36:41 [http-nio-8080-exec-2] INFO  com.lor.controller.AuthController - Login attempt for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-2] INFO  com.lor.service.AuthService - Attempting to authenticate user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
2025-06-25 21:36:41 [http-nio-8080-exec-2] INFO  com.lor.service.AuthService - User authenticated successfully: admin@lor.system with role: Admin
2025-06-25 21:36:41 [http-nio-8080-exec-2] INFO  com.lor.controller.AuthController - Login successful for user: admin@lor.system with role: Admin
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/dashboard
2025-06-25 21:36:41 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/users
2025-06-25 21:36:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/students
2025-06-25 21:36:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/professors
2025-06-25 21:36:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/students/courses
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/students/search?page=0&size=100
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/professors/search?page=0&size=100
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/dashboard
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/users
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/students
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/professors
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/students/courses
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
2025-06-25 21:36:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/professors/search?page=0&size=100
2025-06-25 21:36:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing OPTIONS /admin/students/search?page=0&size=100
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/users
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/students
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/professors
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/students/courses
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/students/search?page=0&size=100
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/users
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getDashboardStatistics(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllUsers(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getDashboardStatistics(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllUsers(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/students
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/professors
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllAdminStudents(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/students/courses
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/students/search?page=0&size=100
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllAdminProfessors(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllAdminStudents(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllAdminProfessors(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllCourses(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllCourses(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.searchAdminStudents(java.lang.String,java.lang.String,int,int); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ap1_0.id,
        ap1_0.created_at,
        ap1_0.department,
        ap1_0.name,
        ap1_0.updated_at,
        ap1_0.user_id 
    from
        admin_professors ap1_0
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        as1_0.id,
        as1_0.course,
        as1_0.created_at,
        as1_0.examination_number,
        as1_0.name,
        as1_0.registration_number,
        as1_0.updated_at 
    from
        admin_students as1_0
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.searchAdminStudents(java.lang.String,java.lang.String,int,int); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.role=?
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        distinct as1_0.course 
    from
        admin_students as1_0 
    order by
        as1_0.course
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        as1_0.id,
        as1_0.course,
        as1_0.created_at,
        as1_0.examination_number,
        as1_0.name,
        as1_0.registration_number,
        as1_0.updated_at 
    from
        admin_students as1_0
2025-06-25 21:36:41 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/professors/search?page=0&size=100
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.role=?
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.role=?
2025-06-25 21:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.role=? 
        and u1_0.is_active=?
2025-06-25 21:36:41 [http-nio-8080-exec-6] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/professors/search?page=0&size=100
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.role=? 
        and u1_0.is_active=?
2025-06-25 21:36:41 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.searchAdminProfessors(java.lang.String,java.lang.String,int,int); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.searchAdminProfessors(java.lang.String,java.lang.String,int,int); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(as1_0.id) 
    from
        admin_students as1_0
2025-06-25 21:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/users
2025-06-25 21:36:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/students/courses
2025-06-25 21:36:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/students
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(ap1_0.id) 
    from
        admin_professors ap1_0
2025-06-25 21:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        admin_students as1_0
2025-06-25 21:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ap1_0.id,
        ap1_0.created_at,
        ap1_0.department,
        ap1_0.name,
        ap1_0.updated_at,
        ap1_0.user_id 
    from
        admin_professors ap1_0
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        lor_requests lr1_0
2025-06-25 21:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        admin_professors ap1_0
2025-06-25 21:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(lr1_0.id) 
    from
        lor_requests lr1_0 
    where
        lr1_0.status=?
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/professors
2025-06-25 21:36:41 [http-nio-8080-exec-10] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/users
2025-06-25 21:36:41 [http-nio-8080-exec-9] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/students/search?page=0&size=100
2025-06-25 21:36:41 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllUsers(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-8] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(lr1_0.id) 
    from
        lor_requests lr1_0 
    where
        lr1_0.status=?
2025-06-25 21:36:41 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllUsers(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/students/courses
2025-06-25 21:36:41 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/students
2025-06-25 21:36:41 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllCourses(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllAdminStudents(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllAdminStudents(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllCourses(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(lr1_0.id) 
    from
        lor_requests lr1_0 
    where
        lr1_0.status=?
2025-06-25 21:36:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0
2025-06-25 21:36:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        distinct as1_0.course 
    from
        admin_students as1_0 
    order by
        as1_0.course
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        as1_0.id,
        as1_0.course,
        as1_0.created_at,
        as1_0.examination_number,
        as1_0.name,
        as1_0.registration_number,
        as1_0.updated_at 
    from
        admin_students as1_0
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(pd1_0.id) 
    from
        pdf_documents pd1_0
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/professors
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/students/search?page=0&size=100
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllAdminProfessors(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getAllAdminProfessors(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.searchAdminStudents(java.lang.String,java.lang.String,int,int); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.searchAdminStudents(java.lang.String,java.lang.String,int,int); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/professors/search?page=0&size=100
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ap1_0.id,
        ap1_0.created_at,
        ap1_0.department,
        ap1_0.name,
        ap1_0.updated_at,
        ap1_0.user_id 
    from
        admin_professors ap1_0
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        as1_0.id,
        as1_0.course,
        as1_0.created_at,
        as1_0.examination_number,
        as1_0.name,
        as1_0.registration_number,
        as1_0.updated_at 
    from
        admin_students as1_0
2025-06-25 21:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        admin_students as1_0
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/professors/search?page=0&size=100
2025-06-25 21:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        sum(pd1_0.file_size) 
    from
        pdf_documents pd1_0
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.searchAdminProfessors(java.lang.String,java.lang.String,int,int); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.searchAdminProfessors(java.lang.String,java.lang.String,int,int); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ap1_0.id,
        ap1_0.created_at,
        ap1_0.department,
        ap1_0.name,
        ap1_0.updated_at,
        ap1_0.user_id 
    from
        admin_professors ap1_0
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
2025-06-25 21:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        admin_professors ap1_0
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG c.l.security.JwtAuthenticationFilter - Set authentication for user: admin@lor.system
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getDashboardStatistics(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.lor.controller.AdminController.getDashboardStatistics(); target is of class [com.lor.controller.AdminController]
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.role=?
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.role=?
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.role=?
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.role=? 
        and u1_0.is_active=?
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(u1_0.id) 
    from
        users u1_0 
    where
        u1_0.role=? 
        and u1_0.is_active=?
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(as1_0.id) 
    from
        admin_students as1_0
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(ap1_0.id) 
    from
        admin_professors ap1_0
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        lor_requests lr1_0
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(lr1_0.id) 
    from
        lor_requests lr1_0 
    where
        lr1_0.status=?
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(lr1_0.id) 
    from
        lor_requests lr1_0 
    where
        lr1_0.status=?
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(lr1_0.id) 
    from
        lor_requests lr1_0 
    where
        lr1_0.status=?
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(pd1_0.id) 
    from
        pdf_documents pd1_0
2025-06-25 21:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        sum(pd1_0.file_size) 
    from
        pdf_documents pd1_0
2025-06-25 22:34:16 [restartedMain] INFO  com.lor.LorManagementApplication - Starting LorManagementApplication using Java 24.0.1 with PID 22064 (D:\LOR\backend\target\classes started by ASUS in D:\LOR\backend)
2025-06-25 22:34:16 [restartedMain] DEBUG com.lor.LorManagementApplication - Running with Spring Boot v3.2.0, Spring v6.1.1
2025-06-25 22:34:16 [restartedMain] INFO  com.lor.LorManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-25 22:34:16 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-25 22:34:16 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-25 22:34:16 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-25 22:34:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 5 JPA repository interfaces.
2025-06-25 22:34:17 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-25 22:34:17 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-25 22:34:17 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-06-25 22:34:17 [restartedMain] INFO  o.a.c.c.C.[.[localhost].[/api] - Initializing Spring embedded WebApplicationContext
2025-06-25 22:34:17 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1501 ms
2025-06-25 22:34:17 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-25 22:34:17 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.3.1.Final
2025-06-25 22:34:17 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-25 22:34:18 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-25 22:34:18 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-25 22:34:18 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3679c6f0
2025-06-25 22:34:18 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-25 22:34:18 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-25 22:34:18 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-25 22:34:19 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-25 22:34:19 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-25 22:34:19 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-25 22:34:19 [restartedMain] DEBUG c.l.security.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-06-25 22:34:20 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-25 22:34:20 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5f0fa0d5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a63879, org.springframework.security.web.context.SecurityContextHolderFilter@63370795, org.springframework.security.web.header.HeaderWriterFilter@a5240e, org.springframework.web.filter.CorsFilter@1bc68d90, org.springframework.security.web.authentication.logout.LogoutFilter@5b95885f, com.lor.security.JwtAuthenticationFilter@767647a7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25669137, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ec4ce24, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@ce7b803, org.springframework.security.web.session.SessionManagementFilter@9f99646, org.springframework.security.web.access.ExceptionTranslationFilter@7ba42b87, org.springframework.security.web.access.intercept.AuthorizationFilter@7984ae3b]
2025-06-25 22:34:20 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-25 22:34:21 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/api'
2025-06-25 22:34:21 [restartedMain] INFO  com.lor.LorManagementApplication - Started LorManagementApplication in 5.22 seconds (process running for 5.644)
2025-06-25 22:34:21 [restartedMain] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.email=?
2025-06-25 22:34:21 [restartedMain] INFO  com.lor.config.DataInitializer - Default admin user already exists
2025-06-25 22:34:21 [restartedMain] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.examination_number=?
2025-06-25 22:34:21 [restartedMain] INFO  com.lor.config.DataInitializer - Demo student user already exists
2025-06-25 22:34:21 [restartedMain] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.user_id=?
2025-06-25 22:34:21 [restartedMain] INFO  com.lor.config.DataInitializer - Demo professor user already exists
2025-06-25 22:34:21 [restartedMain] INFO  com.lor.config.DataInitializer - Checking and fixing existing professors' active status...
2025-06-25 22:34:21 [restartedMain] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.course,
        u1_0.created_at,
        u1_0.department,
        u1_0.email,
        u1_0.examination_number,
        u1_0.is_active,
        u1_0.name,
        u1_0.password,
        u1_0.registration_number,
        u1_0.role,
        u1_0.updated_at,
        u1_0.user_id 
    from
        users u1_0 
    where
        u1_0.role=?
2025-06-25 22:34:21 [restartedMain] INFO  com.lor.config.DataInitializer - Found 2 professors in database
2025-06-25 22:34:21 [restartedMain] INFO  com.lor.config.DataInitializer - Professor A (ID: 3) already has isActive = true
2025-06-25 22:34:21 [restartedMain] INFO  com.lor.config.DataInitializer - Professor B (ID: 5) already has isActive = true
2025-06-25 22:34:21 [restartedMain] INFO  com.lor.config.DataInitializer - All professors already have proper active status
