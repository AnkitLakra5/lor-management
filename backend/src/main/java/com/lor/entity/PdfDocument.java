package com.lor.entity;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;

/**
 * Entity representing a generated PDF document for LOR
 */
@Entity
@Table(name = "pdf_documents")
public class PdfDocument {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @NotNull(message = "LOR request is required")
    @OneToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "lor_request_id", nullable = false, unique = true)
    private LorRequest lorRequest;

    @NotBlank(message = "Reference number is required")
    @Size(max = 100, message = "Reference number must not exceed 100 characters")
    @Column(name = "reference_number", nullable = false, unique = true)
    private String referenceNumber;

    @NotBlank(message = "File path is required")
    @Size(max = 500, message = "File path must not exceed 500 characters")
    @Column(name = "file_path", nullable = false)
    private String filePath;

    @NotBlank(message = "File name is required")
    @Size(max = 255, message = "File name must not exceed 255 characters")
    @Column(name = "file_name", nullable = false)
    private String fileName;

    @NotNull(message = "File size is required")
    @Column(name = "file_size", nullable = false)
    private Long fileSize;

    @NotNull(message = "Generated by is required")
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "generated_by", nullable = false)
    private User generatedBy;

    @Column(name = "generated_at", nullable = false)
    private LocalDateTime generatedAt;

    // Constructors
    public PdfDocument() {
        this.generatedAt = LocalDateTime.now();
    }

    public PdfDocument(LorRequest lorRequest, String referenceNumber, String filePath, 
                      String fileName, Long fileSize, User generatedBy) {
        this();
        this.lorRequest = lorRequest;
        this.referenceNumber = referenceNumber;
        this.filePath = filePath;
        this.fileName = fileName;
        this.fileSize = fileSize;
        this.generatedBy = generatedBy;
    }

    // Getters and Setters
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }

    public LorRequest getLorRequest() { return lorRequest; }
    public void setLorRequest(LorRequest lorRequest) { this.lorRequest = lorRequest; }

    public String getReferenceNumber() { return referenceNumber; }
    public void setReferenceNumber(String referenceNumber) { this.referenceNumber = referenceNumber; }

    public String getFilePath() { return filePath; }
    public void setFilePath(String filePath) { this.filePath = filePath; }

    public String getFileName() { return fileName; }
    public void setFileName(String fileName) { this.fileName = fileName; }

    public Long getFileSize() { return fileSize; }
    public void setFileSize(Long fileSize) { this.fileSize = fileSize; }

    public User getGeneratedBy() { return generatedBy; }
    public void setGeneratedBy(User generatedBy) { this.generatedBy = generatedBy; }

    public LocalDateTime getGeneratedAt() { return generatedAt; }
    public void setGeneratedAt(LocalDateTime generatedAt) { this.generatedAt = generatedAt; }

    @Override
    public String toString() {
        return "PdfDocument{" +
                "id=" + id +
                ", referenceNumber='" + referenceNumber + '\'' +
                ", fileName='" + fileName + '\'' +
                ", fileSize=" + fileSize +
                ", generatedAt=" + generatedAt +
                '}';
    }
}
